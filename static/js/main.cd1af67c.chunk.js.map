{"version":3,"sources":["Assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","EmptyImage","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","Loader","map","movie","key","poster_path","vote_average","release_date","api","axios","create","baseURL","interceptors","request","use","config","params","movieApi","term","get","query","encodeURIComponent","append_to_response","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","tv","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateSearchTerm","onSubmit","placeholder","value","onChange","SearchContainer","e","preventDefault","searchByTerm","target","a","Header","header","Ul","ul","Li","li","current","SLink","Link","withRouter","pathname","location","DetailPresenter","result","propTypes","PropTypes","array","string","bool","isRequired","getDetailResult","includes","match","push","history","isNaN","path","exact","component","Home","Detail","TV","Search","from","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd1af67c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n        :not(:last-child) {\n            margin-bottom: 50px;\n        }\n    `\n\nconst Title = styled.span`\n        font-size: 16px;\n        font-weight: 600;\n    `\n\nconst Grid = styled.div`\n        margin-top:25px;\n        display: grid;\n        grid-template-columns: repeat(auto-fill, 125px);\n        grid-gap: 25px;\n        \n        @media screen and (max-width: 414px) {\n            display: flex;\n            overflow-x: scroll;\n        }\n    `\n\nconst Section = ({title, children}) =>\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>;\n\nSection.propTypes = {\n    title:PropTypes.string.isRequired,\n    children:PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n        height: 100vh;\n        width: 100vw;\n        display: flex;\n        justify-content: center;\n        font-size: 32px;\n        margin-top:20px;\n    `\n\nexport default () =>\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">⏰</span>\n    </Container>;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`\n\nconst Text = styled.span`\n    color:${props => props.color};\n    font-size: 22px;\n    font-weight: bold;\n`\n\nconst Message = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n)\n\nMessage.propTypes = {\n    text:PropTypes.string.isRequired,\n    color:PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport EmptyImage from \"../Assets/noPosterSmall.png\"\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    @media screen and (max-width: 414px) {\n        width: 125px;\n        margin-right:10px;\n        \n        &:nth-child(20) {\n            margin-right: 0;\n        }\n    }\n`\n\nconst Image = styled.div`\n    background-size: cover;\n    background-image: url(${props => props.bgUrl});\n    background-position: center center;\n    height: 180px;\n    transition: opacity 0.2s ease-in-out;\n`\n\nconst Rating = styled.span`\n    font-size: 12px;\n    position: absolute;\n    right:5px;\n    bottom:2px;\n    opacity: 0;\n`\n\nconst ImageContainer = styled.div`\n    &:hover {\n        ${Image} {\n          opacity: 0.3;\n        }\n        ${Rating} {\n          opacity: 1;\n        }\n    }\n    position: relative;\n`\n\nconst Title = styled.span`\n    font-weight: bold;\n    font-size: 12px;\n`\n\nconst Year = styled.span`\n    font-size: 10px;\n    color:#606060;\n`\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie}) => (\n    <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : EmptyImage}/>\n                <Rating>\n                <span role=\"img\" aria-label=\"rating\">\n                    ⭐️\n                </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title.length > 16 ? `${title.substring(0,16)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n)\n\nPoster.propTypes = {\n    id:PropTypes.number.isRequired,\n    imageUrl:PropTypes.string,\n    title:PropTypes.string.isRequired,\n    rating:PropTypes.number,\n    year:PropTypes.string,\n    isMovie:PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n        padding:0 20px;\n     `\n\nconst HomePresenter = ({nowPlaying, upComing, popular, error, loading}) =>\n    loading ? <Loader/> :\n        <Container>\n            {nowPlaying && nowPlaying.length > 0 && (\n                <Section title=\"Now Playing\">\n                    {nowPlaying.map(movie =>\n                        <Poster key={movie.id}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                title={movie.title}\n                                id={movie.id}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}/>\n                    )}\n                </Section>\n            )}\n            {upComing && upComing.length > 0 && (\n                <Section title=\"Upcoming Movies\">\n                    {upComing.map(movie =>\n                        <Poster key={movie.id}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                title={movie.title}\n                                id={movie.id}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}/>\n                    )}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Movies\">\n                    {popular.map(movie =>\n                        <Poster key={movie.id}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                title={movie.title}\n                                id={movie.id}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}/>\n                    )}\n                </Section>\n            )}\n            {error && <Message text={error} color='#ffffff'/>}\n        </Container>;\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upComing: PropTypes.array,\n    popular: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n}\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL : \"https://api.themoviedb.org/3/\"\n})\n\napi.interceptors.request.use(config => {\n    config.params = config.params || {};\n    config.params['api_key'] = \"9da9ca3b8cf9ec3768fc312809cd7946\";\n    config.params['language'] = \"en-US\";\n    return config;\n})\n\nexport const movieApi = {\n    search : (term) => api.get(\"search/movie\", {\n        params : {\n            query : encodeURIComponent(term)\n        }\n    }),\n    nowPlaying : () => api.get(\"movie/now_playing\"),\n    upComing : () => api.get(\"movie/upcoming\"),\n    popular : () => api.get(\"movie/popular\"),\n    movieDetail : (id) => api.get(`movie/${id}`, {\n        params : {\n            append_to_response : \"videos\"\n        }\n    })\n}\n\nexport const tvApi = {\n    search : (term) => api.get(\"search/tv\", {\n        params : {\n            query : encodeURIComponent(term)\n        }\n    }),\n    topRated : () => api.get(\"tv/top_rated\"),\n    popular : () => api.get(\"tv/popular\"),\n    airingToday : () => api.get(\"tv/airing_today\"),\n    tvDetail : (id) => api.get(`tv/${id}`, {\n        params : {\n            append_to_response : \"videos\"\n        }\n    })\n}","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {movieApi} from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying : null,\n        upComing : null,\n        popular  : null,\n        error: null,\n        loading : true\n    };\n\n    async componentDidMount() {\n        try {\n          const {data : {results : nowPlaying}} = await movieApi.nowPlaying();\n          const {data : {results : upComing}} = await movieApi.upComing();\n          const {data : {results : popular}} = await movieApi.popular();\n          this.setState({\n              nowPlaying,\n              upComing,\n              popular\n          })\n        } catch (e) {\n            this.setState({\n                error:\"Can't find movies information.\"\n            })\n        } finally {\n            this.setState({\n                loading:false\n            })\n        }\n    }\n\n    render() {\n        const {nowPlaying, upComing, popular, error, loading} = this.state;\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upComing={upComing}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />)\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n        padding:0 20px;\n     `\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) =>\n    loading ? <Loader/> : (\n        <Container>\n            {topRated && topRated.length > 0 && (\n                <Section title=\"Top Rated Shows\">\n                    {topRated.map(tv=>\n                        <Poster key={tv.id}\n                                imageUrl={tv.poster_path}\n                                rating={tv.vote_average}\n                                title={tv.name}\n                                id={tv.id}\n                                year={tv.first_air_date.substring(0, 4)}\n                        />)}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Shows\">\n                    {popular.map(tv=>\n                    <Poster key={tv.id}\n                                imageUrl={tv.poster_path}\n                                rating={tv.vote_average}\n                                title={tv.name}\n                                id={tv.id}\n                                year={tv.first_air_date.substring(0, 4)}\n                    />)}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title=\"Airing Today Shows\">\n                    {airingToday.map(tv=>\n                    <Poster key={tv.id}\n                                imageUrl={tv.poster_path}\n                                rating={tv.vote_average}\n                                title={tv.name}\n                                id={tv.id}\n                                year={tv.first_air_date.substring(0, 4)}\n                    />)}\n                </Section>\n            )}\n            {error && <Message text={error} color='#ffffff'/>}\n        </Container>\n    )\n\nTVPresenter.propTypes = {\n    topRated:PropTypes.array,\n    popular:PropTypes.array,\n    airingToday:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport {tvApi} from \"api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated : null,\n        airingToday : null,\n        popular  : null,\n        error: null,\n        loading : true\n    };\n\n    async componentDidMount() {\n        try {\n            const {data : {results : topRated}} = await tvApi.topRated();\n            const {data : {results : airingToday}} = await tvApi.airingToday();\n            const {data : {results : popular}} = await tvApi.popular();\n            this.setState({\n                topRated,\n                airingToday,\n                popular\n            })\n        } catch (e) {\n            this.setState({error : \"Can't find tv information.\"})\n        } finally {\n            this.setState({loading : false})\n        }\n    }\n\n    render() {\n        const {topRated, airingToday, popular, error, loading} = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                airingToday={airingToday}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />)\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding:0 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all:unset;\n    font-size: 18px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({movieResults,tvResults,searchTerm,error,loading,handleSubmit, updateSearchTerm}) =>\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"search\" value={searchTerm} onChange={updateSearchTerm} />\n        </Form>\n        {loading ? <Loader/> :\n            // Fragment\n            <>\n                {movieResults &&\n                <Section title=\"Movie Results\">\n                    {movieResults.map(movie=>\n                        <Poster key={movie.id}\n                                imageUrl={movie.poster_path}\n                                rating={movie.vote_average}\n                                title={movie.title}\n                                id={movie.id}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}/>)}\n                </Section>}\n                {tvResults &&\n                <Section title=\"TV Results\">\n                    {tvResults.map(tv=>\n                        <Poster key={tv.id}\n                                imageUrl={tv.poster_path}\n                                rating={tv.vote_average}\n                                title={tv.name}\n                                id={tv.id}\n                                year={tv.first_air_date.substring(0, 4)}\n                                />)}\n                </Section>}\n                {error && <Message text={error} color='red'/>}\n                {!movieResults && !tvResults && <Message color=\"#ffffff\" text=\"Nothing found\"/>}\n            </>\n        }\n    </Container>;\n\nSearchPresenter.propTypes = {\n    movieResults:PropTypes.array,\n    tvResults:PropTypes.array,\n    searchTerm:PropTypes.string,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string,\n    handleSubmit:PropTypes.func.isRequired,\n    updateSearchTerm:PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport {movieApi, tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults : null,\n        tvResults : null,\n        searchTerm  : \"\",\n        error: null,\n        loading : true\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const {searchTerm} = this.state;\n        if (searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    }\n\n    updateSearchTerm = (e) => {\n        const {target : {value}} = e;\n        this.setState({searchTerm : value})\n    }\n\n    searchByTerm = async() => {\n        const {searchTerm} = this.state;\n        this.setState({loading : true});\n\n        try {\n            const {data : {results : movieResults}} = await movieApi.search(searchTerm);\n            const {data : {results : tvResults}} = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults,\n            })\n        } catch (e) {\n            this.setState({error : \"Cant't find results.\"})\n        } finally {\n            this.setState({\n                loading: false,\n            })\n        }\n    }\n\n    render() {\n        const {movieResults, tvResults, searchTerm, error, loading} = this.state;\n\n        return (\n            <SearchPresenter\n                movieResults={(movieResults && movieResults.length > 0) ? movieResults : null}\n                tvResults={(tvResults && tvResults.length > 0) ? tvResults : null}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateSearchTerm={this.updateSearchTerm}\n            />)\n    }\n}","import React from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n        display: flex;\n        position: fixed;\n        color: white;\n        top : 0;\n        left : 0;\n        height : 50px;\n        align-items: center;\n        z-index : 10;\n        background-color: #000000;\n        width: 100%;\n    `\n\nconst Ul = styled.ul`\n        display: flex;\n        margin-left:10px;\n    `\n\nconst Li = styled.li`\n        padding:10px;\n        border-bottom:5px solid ${props => props.current ? \"red\" : \"transparent\"};\n        transition:border-bottom 0.5s ease-in-out;\n    `\n\nconst SLink = styled(Link)`\n    \n    `\n\nexport default withRouter(({location : {pathname}}) => (\n        <Header>\n            <Ul>\n                <Li current={pathname === \"/\"}><SLink to=\"/\">Movies</SLink></Li>\n                <Li current={pathname === \"/tv\"}><SLink to=\"/tv\">TV</SLink></Li>\n                <Li current={pathname === \"/search\"}><SLink to=\"/search\">Search</SLink></Li>\n            </Ul>\n        </Header>\n))","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst DetailPresenter = ({result, error, loading}) => null;\n\nDetailPresenter.propTypes = {\n    result:PropTypes.array,\n    error:PropTypes.string,\n    loading:PropTypes.bool.isRequired,\n}\n\nexport default DetailPresenter;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport {movieApi, tvApi} from \"../../api\";\n\nexport default class extends React.Component {\n\n    state = {\n        result : null,\n        error: null,\n        loading : true,\n    };\n\n    async componentDidMount() {\n        const {match: {params : {id}}, history : {push}} = this.props;\n        this.setState({loading : true});\n\n        if (isNaN(id))\n            return push(\"/\");\n\n        let result = null;\n        try {\n            /** 이게 말이 돼? fucking awesome 전체 괄호는 const와 동일 */\n            ({data : result} = await this.getDetailResult(id));\n        } catch (e) {\n            this.setState({error : \"Can't find anything.\"});\n        } finally {\n            this.setState({loading : false, result})\n        }\n    }\n\n    getDetailResult = async (id) => {\n        if (this.isMovie)\n            return await movieApi.movieDetail(id);\n\n        return await tvApi.tvDetail(id);\n    }\n\n    isMovie = () => {\n        const {location : {pathname}} = this.props;\n        return pathname.includes(\"/movie/\")\n    }\n\n\n\n    render() {\n        const {result, error, loading} = this.state;\n        return (\n            <DetailPresenter\n                result={result}\n                error={error}\n                loading={loading}\n            />)\n    }\n}","import React from \"react\";\nimport {HashRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Home from \"../Routes/Home\"\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Header from \"./Header\";\nimport Detail from \"../Routes/Detail/DetailContainer\";\n\nexport default () => (\n    <Router>\n        <Header/>\n        <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/movie/:id\"  component={Detail}/>\n            <Route path=\"/tv\" exact component={TV}/>\n            <Route path=\"/tv/:id\" component={Detail}/>\n            <Route path=\"/search\" component={Search}/>\n            <Redirect from=\"*\" to=\"/\"/>\n        </Switch>\n    </Router>\n)","import React from 'react';\nimport Router from \"./Router\";\nimport \"../tailwind.css\";\n\nfunction App() {\n  return (\n      <div>\n        <Router/>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}